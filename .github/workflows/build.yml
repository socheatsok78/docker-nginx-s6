name: build

on:
  push:
    branches:
      - "main"
  schedule:
    # https://crontab.guru/#40_10_*_*_*
    - cron: '40 10 * * *'

permissions:
  contents: read
  packages: write

env:
  # github.repository as <account>/<repo>
  IMAGE_NAME: socheatsok78/nginx-s6
  IMAGE_PLATFORMS: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6

jobs:
  build-canonicals:
    runs-on: ubuntu-latest
    continue-on-error: true
    permissions:
      contents: read
      packages: write
    strategy:
      max-parallel: 1
      matrix:
        version:
          # - "1.21"
          # - "1.21-alpine"
          - "1.22"
          - "1.22-alpine"
          - "1.23"
          - "1.23-alpine"
          - "alpine"
          - "latest"
          - "mainline"
          - "mainline-alpine"
          - "stable"
          - "stable-alpine"
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    # Login against a Docker registry except on PR
    # https://github.com/docker/login-action
    - name: Log into registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    # Login against a GitHub Docker registry except on PR
    # https://github.com/docker/login-action
    - name: Log into registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: "versions/canonicals/${{ matrix.version }}"
        push: true
        platforms: ${{ env.IMAGE_PLATFORMS }}
        tags: |
          "docker.io/${{ env.IMAGE_NAME }}:${{ matrix.version }}"
          "ghcr.io/${{ env.IMAGE_NAME }}:${{ matrix.version }}"

  build-fixed:
    runs-on: ubuntu-latest
    continue-on-error: true
    permissions:
      contents: read
      packages: write
    strategy:
      max-parallel: 1
      matrix:
        version:
          # - "1.21.3"
          # - "1.21.3-alpine"
          # - "1.21.4"
          # - "1.21.4-alpine"
          # - "1.21.5"
          # - "1.21.5-alpine"
          # - "1.21.6"
          # - "1.21.6-alpine"
          - "1.22.0"
          - "1.22.0-alpine"
          - "1.23.0"
          - "1.23.0-alpine"
          - "1.23.1"
          - "1.23.1-alpine"
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    # Login against a Docker registry except on PR
    # https://github.com/docker/login-action
    - name: Log into registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    # Login against a GitHub Docker registry except on PR
    # https://github.com/docker/login-action
    - name: Log into registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: "versions/fixed/${{ matrix.version }}"
        push: true
        platforms: ${{ env.IMAGE_PLATFORMS }}
        tags: |
          "docker.io/${{ env.IMAGE_NAME }}:${{ matrix.version }}"
          "ghcr.io/${{ env.IMAGE_NAME }}:${{ matrix.version }}"
